args(round)
# getting help on a function
?round
# vectors
weight_g <- c(50, 60, 65, 82) # a vector containing numbers
weight_g
animals <- c("mouse", "rat", "dog") # a vector containing characters
animals
# how many elements are in the vector
length(weight_g)
length(animals)
# get the structure of the objects
str(weight_g)
str(animals)
weight_g <- c(weight_g, 90) # add to the end of the vector
weight_g <- c(30, weight_g) # add to the beginning of the vector
weight_g
# how many elements are in the vector
length(weight_g)
# get the structure of the objects
str(weight_g)
# integer
d <- 2L
f <- FALSE
# complex
g <- 1+4i
typeof(a)
# 1. character
a <- "abc"
typeof(a)
typeof(c)
typeof(b)
# 2. numeric (real or decimal)
b <- 2
c <- 13.5
typeof(c)
typeof(b)
typeof(d)
# Conditional subsetting
weight_g[weight_g > 30 & weight_g < 50]
# adding elements to a vector using the c() function
weight_g <- c(weight_g, 90) # add to the end of the vector
weight_g <- c(30, weight_g) # add to the beginning of the vector
weight_g
weight_g[weight_g > 30 & weight_g < 50]
# Conditional subsetting
weight_g <- c(21, 34, 39, 54, 55)
weight_g[weight_g > 30 & weight_g < 50]
weight_g[weight_g <= 30 | weight_g == 55]
##########
# Missing values
heights <- c(2, 4, 4, NA, 6)
## Extract those elements which are not missing values.
heights[!is.na(heights)]
na.omit(heights)
heights[complete.cases(heights)]
# LOADING DATA INTO R -----------------------------------------------------
download.file(url = "https://ndownloader.figshare.com/files/2292169",
destfile = "portal_data_joined.csv")
########### Factors ################
# for categorical data
data = c(1,2,2,3,1,2,3,3,1,2,3,3,1)
fdata = factor(data)
fdata
# loading data into R
surveys <- read.csv("data_raw/portal_data_joined.csv")
# loading data into R
surveys <- read.csv("portal_data_joined.csv")
View(surveys)
# View the first 6 records
head(surveys)
summary(surveys)
sex <- factor(c("male", "female", "female", "male"))
levels(sex)
nlevels(sex)
# reordering
sex <- factor(sex, levels = c("male", "female"))
sex # after re-ordering
sex <- factor(c("male", "female", "female", "male"))
sex
# reordering
sex <- factor(sex, levels = c("male", "female"))
sex # after re-ordering
